library(hexbin)
library(data.table)
library(doBy)
library(lattice)
library(gridExtra)
#load appropriate libraries.
setwd("./example_files")
files <- list.files(pattern = 'smds.per.base.coverage')
#set working directory and get files.
?setNames
library(hexbin)
library(data.table)
library(doBy)
library(lattice)
library(gridExtra)
#load appropriate libraries.
setwd("./example_files")
files <- list.files(pattern = 'smds.per.base.coverage')
setwd("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
files <- list.files(pattern = 'smds.per.base.coverage')
temp_data <- function(file) {
temp_dataset <- read.table(file, header=F, sep="\t")
temp_dataset <- temp_dataset[ which(temp_dataset$V1!='genome'), ]
temp_dataset$loc = as.character(lapply(strsplit(as.character(temp_dataset$V1), split="_"), "[", -2))
temp_dataset$taxon = as.character(lapply(strsplit(as.character(temp_dataset$V1), split="_"), "[", -1))
temp_dataset$pos = temp_dataset$V2
temp_dataset$exactloc = as.character(lapply(strsplit(as.character(temp_dataset$loc), split="uce"), "[", 2))
dt <- data.table(temp_dataset)
setkey(dt, "exactloc")
X <- dt[, list(MED=max(pos)), by=key(dt)]
temp_dataset <- dt[X, list(taxon, V1, pos, V3, loc, trPos=floor(V2-(MED/2)))]
return(temp_dataset)
}
file <- files[4]
file
temp_dataset <- temp_data(file)
head(temp_dataset)
dataset <- temp_data(file)
temp_dataset <- setNames( temp_dataset , names( dataset ) )
head(temp_dataset)
names( dataset )
rm(dataset)
for (file in files){
if (exists("dataset")){
Sys.sleep(0.1)
print(file)
flush.console()
#provides a way to see what files are being worked on.
temp_dataset <- temp_data(file)
#temp_dataset <- setNames( temp_dataset , names( dataset ) )
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
} else {
Sys.sleep(0.1)
#print(file)
flush.console()
#provides a way to see what files are being worked on.
dataset <- temp_data(file)
}
# if the merged dataset does exist, append to it
}
make_dataset <- function(working_dir) {
setwd(working_dir)
files <- list.files(pattern = 'smds.per.base.coverage')
#set working directory and get files.
#a function to generate the dataset.
for (file in files){
#simple for loop traversing all files the loop picked up earlier.
if (exists("dataset")){
#if the dataset already exists, this will start the append process.
Sys.sleep(0.1)
print(file)
flush.console()
#provides a way to see what files are being worked on.
temp_dataset <- temp_data(file)
#run the function setup above on the file.
dataset<-rbind(dataset, temp_dataset)
#join the new data to the old dataset.
rm(temp_dataset)
#as a precaution, remove the temp_dataset from memory.
} else {
#if dataset does not exist, we need to make it.
Sys.sleep(0.1)
#print(file)
flush.console()
#provides a way to see what files are being worked on.
dataset <- temp_data(file)
#this runs the function on the file and generates 'dataset'
}
# if the merged dataset does exist, append to it
}
new_data <- dataset
rm(dataset)
#this is a precaution against if you run the function twice. It will remove 'dataset' so that if the loop is run again, a new dataset will be made.
return(new_data)
}
#The above is a function loops over files in the directory provided to the function.
rm(dataset)
make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
rm(dataset)
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
files
setwd(working_dir)
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
make_dataset <- function(working_dir) {
#a function to generate the dataset.
setwd(working_dir)
files <- list.files(pattern = 'smds.per.base.coverage')
#set working directory and get files.
for (file in files){
#simple for loop traversing all files the loop picked up earlier.
if (exists("dataset")){
#if the dataset already exists, this will start the append process.
Sys.sleep(0.1)
print(file)
flush.console()
#provides a way to see what files are being worked on.
temp_dataset <- temp_data(file)
#run the function setup above on the file.
dataset<-rbind(dataset, temp_dataset)
#join the new data to the old dataset.
rm(temp_dataset)
#as a precaution, remove the temp_dataset from memory.
} else {
#if dataset does not exist, we need to make it.
Sys.sleep(0.1)
print(file)
flush.console()
#provides a way to see what files are being worked on.
dataset <- temp_data(file)
#this runs the function on the file and generates 'dataset'
}
}
new_data <- dataset
rm(dataset)
#this is a precaution against if you run the function twice. It will remove 'dataset' so that if the loop is run again, a new dataset will be made.
return(new_data)
}
new_data <- make_dataset("/Users/mlloyd/Documents/R_Loop_Presentation/example_files")
summary_all_loci <- summaryBy(V3 ~ trPos+loc, data = new_data, FUN = function(x) { c(m = mean(x)) } )
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,200), xlab='Position From Center', ylab='Average Depth (x)', aspect=1, main="All Loci")
plot2 <- xyplot(summary_avg_loci$V3.n~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,7000), xlab='Position From Center', ylab='', aspect=1)
summary_avg_loci <- summaryBy(V3 ~ trPos, data = new_data, FUN = function(x) { c(m = mean(x), n = length(x)) } )
plot1 <- xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,200), xlab='Position From Center', ylab='Average Depth (x)', aspect=1, main="All Loci")
plot2 <- xyplot(summary_avg_loci$V3.n~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,7000), xlab='Position From Center', ylab='', aspect=1)
plot3 <- hexbinplot(summary_all_loci$V3.m ~ summary_all_loci$trPos, style = "nested.lattice", xbins=75, xlab='Position From Center', ylab='Depth (x)', ylim=c(0,500), xlim=c(-550,550), legend.width=1, aspect=1, colorkey=F, colorcut=seq(0, 1, length = 21))
grid.arrange(plot1, plot2, plot3, ncol=2)
grid.arrange(plot1, plot3, ncol=2)
plot2
plot2 <- xyplot(summary_avg_loci$V3.n~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,200), xlab='Position From Center', ylab='', aspect=1)
plot2
plot2 <- xyplot(summary_avg_loci$V3.n~summary_avg_loci$trPos, xlim=c(-600,600), ylim=c(-10,500), xlab='Position From Center', ylab='', aspect=1)
plot2
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', aspect=1, main="All Loci", cex=5, cex.axis=5, cex.label=5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, cex.axis=3, cex.lab=3, cex.main=5, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, cex.axis=3, cex.lab=3, cex.main=15, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=5, cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=1, cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
xyplot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=3, cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=3, cex.lab=1.5, cex.axis=1.5, cex.main=1.5, cex.sub=1.5)
plot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=3, cex.lab=5, cex.axis=5, cex.main=5, cex.sub=5, col=blue, pch=16)
plot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=3, cex.lab=5, cex.axis=5, cex.main=5, cex.sub=5, col='blue', pch=16)
par(oma=c(3,3,3,3), mar=c(3.5,4,3,2))
plot(summary_avg_loci$V3.m~summary_avg_loci$trPos, xlim=c(-200,200), ylim=c(-10,100), xlab='Position From Center', ylab='Average Depth (x)', main="All Loci", cex=3, cex.lab=2, cex.axis=2, cex.main=2, cex.sub=2, col='blue', pch=16)
